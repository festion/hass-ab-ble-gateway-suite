scan_and_display_ble_devices:
  alias: Scan and Display BLE Devices
  description: Scan for BLE devices and display them in a notification
  sequence:
    - service: persistent_notification.create
      data:
        title: "Bluetooth Scan"
        message: "Starting Bluetooth scan..."
        notification_id: "ble_scan"
    
    # Perform the BLE scan
    - service: button.press
      target:
        entity_id: button.bluetooth_scan
    
    # Wait for scan to complete
    - delay: 
        seconds: 5
    
    # Process scan results
    - variables:
        gateway_data: "{{ state_attr('sensor.ble_gateway_raw_data', 'devices') }}"
        devices_list: >
          {% if gateway_data is not none %}
            {% set devices = [] %}
            {% for device in gateway_data %}
              {% if device|length >= 3 and device[1]|string|trim != '' and device[2]|string|trim != '' %}
                {% set device_info = {
                  'mac': device[1],
                  'rssi': device[2]|int(-100),
                  'adv_data': device[3] if device|length > 3 and device[3]|string|trim != '' else 'None'
                } %}
                {% set devices = devices + [device_info] %}
              {% endif %}
            {% endfor %}
            {% set sorted_devices = devices|sort(attribute='rssi')|reverse %}
            {{ sorted_devices }}
          {% else %}
            []
          {% endif %}
    
    # Create a list of discovered devices in the input_text entity
    - service: input_text.set_value
      data:
        value: >
          {% if devices_list|length > 0 %}
            {% set device_data = {} %}
            {% for device in devices_list %}
              {% set device_data = device_data.update({device.mac: device.rssi}) or device_data %}
            {% endfor %}
            {{ device_data|tojson }}
          {% else %}
            {}
          {% endif %}
      target:
        entity_id: input_text.discovered_ble_devices
    
    # Display results
    - service: persistent_notification.create
      data:
        title: "Discovered BLE Devices"
        message: >
          {% if devices_list|length > 0 %}
            Found {{ devices_list|length }} devices:
            
            {% for device in devices_list %}
            **Device {{ loop.index }}**:
            - MAC: {{ device.mac }}
            - RSSI: {{ device.rssi }} dBm
            {% endfor %}
            
            To add a device, select it in the BLE Dashboard.
          {% else %}
            No BLE devices detected.
          {% endif %}
        notification_id: "ble_scan_results"